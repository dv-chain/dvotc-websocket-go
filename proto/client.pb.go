// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: proto/client.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Types int32

const (
	Types_subscribe       Types = 0
	Types_unsubscribe     Types = 1
	Types_requestresponse Types = 2
	Types_pingpong        Types = 3
	Types_info            Types = 4
	Types_error           Types = 5
)

// Enum value maps for Types.
var (
	Types_name = map[int32]string{
		0: "subscribe",
		1: "unsubscribe",
		2: "requestresponse",
		3: "pingpong",
		4: "info",
		5: "error",
	}
	Types_value = map[string]int32{
		"subscribe":       0,
		"unsubscribe":     1,
		"requestresponse": 2,
		"pingpong":        3,
		"info":            4,
		"error":           5,
	}
)

func (x Types) Enum() *Types {
	p := new(Types)
	*p = x
	return p
}

func (x Types) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Types) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_client_proto_enumTypes[0].Descriptor()
}

func (Types) Type() protoreflect.EnumType {
	return &file_proto_client_proto_enumTypes[0]
}

func (x Types) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Types.Descriptor instead.
func (Types) EnumDescriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{0}
}

// Not used, just for reference of what is available
type Events int32

const (
	Events_levels        Events = 0
	Events_prices        Events = 1
	Events_reconnect     Events = 2
	Events_notifications Events = 3
	Events_any_uuid      Events = 4
)

// Enum value maps for Events.
var (
	Events_name = map[int32]string{
		0: "levels",
		1: "prices",
		2: "reconnect",
		3: "notifications",
		4: "any_uuid",
	}
	Events_value = map[string]int32{
		"levels":        0,
		"prices":        1,
		"reconnect":     2,
		"notifications": 3,
		"any_uuid":      4,
	}
)

func (x Events) Enum() *Events {
	p := new(Events)
	*p = x
	return p
}

func (x Events) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Events) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_client_proto_enumTypes[1].Descriptor()
}

func (Events) Type() protoreflect.EnumType {
	return &file_proto_client_proto_enumTypes[1]
}

func (x Events) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Events.Descriptor instead.
func (Events) EnumDescriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{1}
}

type OrderSide int32

const (
	OrderSide_Buy  OrderSide = 0
	OrderSide_Sell OrderSide = 1
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "Buy",
		1: "Sell",
	}
	OrderSide_value = map[string]int32{
		"Buy":  0,
		"Sell": 1,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_client_proto_enumTypes[2].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_proto_client_proto_enumTypes[2]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{2}
}

type OrderType int32

const (
	OrderType_MARKET OrderType = 0
	OrderType_LIMIT  OrderType = 1
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "MARKET",
		1: "LIMIT",
	}
	OrderType_value = map[string]int32{
		"MARKET": 0,
		"LIMIT":  1,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_client_proto_enumTypes[3].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_proto_client_proto_enumTypes[3]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{3}
}

type InfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InfoMessage) Reset() {
	*x = InfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoMessage) ProtoMessage() {}

func (x *InfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoMessage.ProtoReflect.Descriptor instead.
func (*InfoMessage) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{0}
}

func (x *InfoMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{1}
}

func (x *ErrorMessage) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Level struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SellPrice   float64 `protobuf:"fixed64,1,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	BuyPrice    float64 `protobuf:"fixed64,2,opt,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`
	MaxQuantity float64 `protobuf:"fixed64,3,opt,name=max_quantity,json=maxQuantity,proto3" json:"max_quantity,omitempty"`
}

func (x *Level) Reset() {
	*x = Level{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Level) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level) ProtoMessage() {}

func (x *Level) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level.ProtoReflect.Descriptor instead.
func (*Level) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{2}
}

func (x *Level) GetSellPrice() float64 {
	if x != nil {
		return x.SellPrice
	}
	return 0
}

func (x *Level) GetBuyPrice() float64 {
	if x != nil {
		return x.BuyPrice
	}
	return 0
}

func (x *Level) GetMaxQuantity() float64 {
	if x != nil {
		return x.MaxQuantity
	}
	return 0
}

type PricesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdate    int64   `protobuf:"varint,1,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Price         float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	BestBid       float64 `protobuf:"fixed64,3,opt,name=best_bid,json=bestBid,proto3" json:"best_bid,omitempty"`
	BestAsk       float64 `protobuf:"fixed64,4,opt,name=best_ask,json=bestAsk,proto3" json:"best_ask,omitempty"`
	High          float64 `protobuf:"fixed64,5,opt,name=high,proto3" json:"high,omitempty"`
	Low           float64 `protobuf:"fixed64,6,opt,name=low,proto3" json:"low,omitempty"`
	Close         float64 `protobuf:"fixed64,7,opt,name=close,proto3" json:"close,omitempty"`
	Volume        float64 `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	Change        float64 `protobuf:"fixed64,9,opt,name=change,proto3" json:"change,omitempty"`
	ChangePercent float64 `protobuf:"fixed64,10,opt,name=change_percent,json=changePercent,proto3" json:"change_percent,omitempty"`
	Market        string  `protobuf:"bytes,11,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *PricesData) Reset() {
	*x = PricesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricesData) ProtoMessage() {}

func (x *PricesData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricesData.ProtoReflect.Descriptor instead.
func (*PricesData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{3}
}

func (x *PricesData) GetLastUpdate() int64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *PricesData) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PricesData) GetBestBid() float64 {
	if x != nil {
		return x.BestBid
	}
	return 0
}

func (x *PricesData) GetBestAsk() float64 {
	if x != nil {
		return x.BestAsk
	}
	return 0
}

func (x *PricesData) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *PricesData) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *PricesData) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *PricesData) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *PricesData) GetChange() float64 {
	if x != nil {
		return x.Change
	}
	return 0
}

func (x *PricesData) GetChangePercent() float64 {
	if x != nil {
		return x.ChangePercent
	}
	return 0
}

func (x *PricesData) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type LevelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdate int64    `protobuf:"varint,1,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Levels     []*Level `protobuf:"bytes,2,rep,name=levels,proto3" json:"levels,omitempty"`
	QuoteId    string   `protobuf:"bytes,3,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
	Market     string   `protobuf:"bytes,4,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *LevelData) Reset() {
	*x = LevelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelData) ProtoMessage() {}

func (x *LevelData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelData.ProtoReflect.Descriptor instead.
func (*LevelData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{4}
}

func (x *LevelData) GetLastUpdate() int64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *LevelData) GetLevels() []*Level {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *LevelData) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

func (x *LevelData) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type TradeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	TradeKeys  string `protobuf:"bytes,2,opt,name=trade_keys,json=tradeKeys,proto3" json:"trade_keys,omitempty"`
	ClientTags string `protobuf:"bytes,3,opt,name=client_tags,json=clientTags,proto3" json:"client_tags,omitempty"`
}

func (x *TradeStatusRequest) Reset() {
	*x = TradeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusRequest) ProtoMessage() {}

func (x *TradeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusRequest.ProtoReflect.Descriptor instead.
func (*TradeStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{5}
}

func (x *TradeStatusRequest) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

func (x *TradeStatusRequest) GetTradeKeys() string {
	if x != nil {
		return x.TradeKeys
	}
	return ""
}

func (x *TradeStatusRequest) GetClientTags() string {
	if x != nil {
		return x.ClientTags
	}
	return ""
}

type CreateOrderMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price        float64   `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	LimitPrice   float64   `protobuf:"fixed64,2,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	Qty          float64   `protobuf:"fixed64,3,opt,name=qty,proto3" json:"qty,omitempty"`
	Side         OrderSide `protobuf:"varint,4,opt,name=side,proto3,enum=main.OrderSide" json:"side,omitempty"`
	OrderType    OrderType `protobuf:"varint,5,opt,name=order_type,json=orderType,proto3,enum=main.OrderType" json:"order_type,omitempty"`
	QuoteId      string    `protobuf:"bytes,6,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
	Asset        string    `protobuf:"bytes,7,opt,name=asset,proto3" json:"asset,omitempty"`
	CounterAsset string    `protobuf:"bytes,8,opt,name=counter_asset,json=counterAsset,proto3" json:"counter_asset,omitempty"`
	ClientTag    string    `protobuf:"bytes,9,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
	Expires      int64     `protobuf:"varint,10,opt,name=expires,proto3" json:"expires,omitempty"`
}

func (x *CreateOrderMessage) Reset() {
	*x = CreateOrderMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderMessage) ProtoMessage() {}

func (x *CreateOrderMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderMessage.ProtoReflect.Descriptor instead.
func (*CreateOrderMessage) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{6}
}

func (x *CreateOrderMessage) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateOrderMessage) GetLimitPrice() float64 {
	if x != nil {
		return x.LimitPrice
	}
	return 0
}

func (x *CreateOrderMessage) GetQty() float64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (x *CreateOrderMessage) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_Buy
}

func (x *CreateOrderMessage) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_MARKET
}

func (x *CreateOrderMessage) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

func (x *CreateOrderMessage) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CreateOrderMessage) GetCounterAsset() string {
	if x != nil {
		return x.CounterAsset
	}
	return ""
}

func (x *CreateOrderMessage) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

func (x *CreateOrderMessage) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId       string `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{7}
}

func (x *User) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price        float64   `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity     float64   `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side         OrderSide `protobuf:"varint,3,opt,name=side,proto3,enum=main.OrderSide" json:"side,omitempty"`
	OrderType    OrderType `protobuf:"varint,4,opt,name=order_type,json=orderType,proto3,enum=main.OrderType" json:"order_type,omitempty"`
	CreatedAt    string    `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XId          string    `protobuf:"bytes,6,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	User         *User     `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	Asset        string    `protobuf:"bytes,8,opt,name=asset,proto3" json:"asset,omitempty"`
	CounterAsset string    `protobuf:"bytes,9,opt,name=counter_asset,json=counterAsset,proto3" json:"counter_asset,omitempty"`
	Status       string    `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt    string    `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FilledAt     string    `protobuf:"bytes,12,opt,name=filled_at,json=filledAt,proto3" json:"filled_at,omitempty"`
	ClientTag    string    `protobuf:"bytes,13,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{8}
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Trade) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_Buy
}

func (x *Trade) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_MARKET
}

func (x *Trade) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Trade) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *Trade) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Trade) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *Trade) GetCounterAsset() string {
	if x != nil {
		return x.CounterAsset
	}
	return ""
}

func (x *Trade) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Trade) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Trade) GetFilledAt() string {
	if x != nil {
		return x.FilledAt
	}
	return ""
}

func (x *Trade) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

type TradeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *TradeStatusResponse) Reset() {
	*x = TradeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusResponse) ProtoMessage() {}

func (x *TradeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusResponse.ProtoReflect.Descriptor instead.
func (*TradeStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{9}
}

func (x *TradeStatusResponse) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset    string  `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	MaxSell  float64 `protobuf:"fixed64,2,opt,name=max_sell,json=maxSell,proto3" json:"max_sell,omitempty"`
	MaxBuy   float64 `protobuf:"fixed64,3,opt,name=max_buy,json=maxBuy,proto3" json:"max_buy,omitempty"`
	Position float64 `protobuf:"fixed64,4,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{10}
}

func (x *Asset) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *Asset) GetMaxSell() float64 {
	if x != nil {
		return x.MaxSell
	}
	return 0
}

func (x *Asset) GetMaxBuy() float64 {
	if x != nil {
		return x.MaxBuy
	}
	return 0
}

func (x *Asset) GetPosition() float64 {
	if x != nil {
		return x.Position
	}
	return 0
}

type LimitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets     []*Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	UsdBalance float64  `protobuf:"fixed64,2,opt,name=usd_balance,json=usdBalance,proto3" json:"usd_balance,omitempty"`
}

func (x *LimitsResponse) Reset() {
	*x = LimitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitsResponse) ProtoMessage() {}

func (x *LimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitsResponse.ProtoReflect.Descriptor instead.
func (*LimitsResponse) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{11}
}

func (x *LimitsResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *LimitsResponse) GetUsdBalance() float64 {
	if x != nil {
		return x.UsdBalance
	}
	return 0
}

type StatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusMessage) Reset() {
	*x = StatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusMessage) ProtoMessage() {}

func (x *StatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusMessage.ProtoReflect.Descriptor instead.
func (*StatusMessage) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{12}
}

func (x *StatusMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type OrderUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price        float64   `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity     float64   `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	LimitPrice   float64   `protobuf:"fixed64,3,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	Side         OrderSide `protobuf:"varint,4,opt,name=side,proto3,enum=main.OrderSide" json:"side,omitempty"`
	XId          string    `protobuf:"bytes,5,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	CreatedAt    string    `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	User         *User     `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	Asset        string    `protobuf:"bytes,8,opt,name=asset,proto3" json:"asset,omitempty"`
	CounterAsset string    `protobuf:"bytes,9,opt,name=counter_asset,json=counterAsset,proto3" json:"counter_asset,omitempty"`
	Status       string    `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	Source       string    `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	ClientTag    string    `protobuf:"bytes,12,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
}

func (x *OrderUpdate) Reset() {
	*x = OrderUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdate) ProtoMessage() {}

func (x *OrderUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdate.ProtoReflect.Descriptor instead.
func (*OrderUpdate) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{13}
}

func (x *OrderUpdate) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderUpdate) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderUpdate) GetLimitPrice() float64 {
	if x != nil {
		return x.LimitPrice
	}
	return 0
}

func (x *OrderUpdate) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_Buy
}

func (x *OrderUpdate) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *OrderUpdate) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderUpdate) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *OrderUpdate) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *OrderUpdate) GetCounterAsset() string {
	if x != nil {
		return x.CounterAsset
	}
	return ""
}

func (x *OrderUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderUpdate) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OrderUpdate) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

type PriceHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp float64 `protobuf:"fixed64,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Open      float64 `protobuf:"fixed64,2,opt,name=Open,proto3" json:"Open,omitempty"`
	High      float64 `protobuf:"fixed64,3,opt,name=High,proto3" json:"High,omitempty"`
	Low       float64 `protobuf:"fixed64,4,opt,name=Low,proto3" json:"Low,omitempty"`
	Close     float64 `protobuf:"fixed64,5,opt,name=Close,proto3" json:"Close,omitempty"`
}

func (x *PriceHistory) Reset() {
	*x = PriceHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceHistory) ProtoMessage() {}

func (x *PriceHistory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceHistory.ProtoReflect.Descriptor instead.
func (*PriceHistory) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{14}
}

func (x *PriceHistory) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PriceHistory) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *PriceHistory) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *PriceHistory) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *PriceHistory) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

type PriceHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval  int32  `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"`
	Count     int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Symbol    string `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *PriceHistoryRequest) Reset() {
	*x = PriceHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceHistoryRequest) ProtoMessage() {}

func (x *PriceHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceHistoryRequest.ProtoReflect.Descriptor instead.
func (*PriceHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{15}
}

func (x *PriceHistoryRequest) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *PriceHistoryRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PriceHistoryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PriceHistoryRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type PriceHistoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceHistory []*PriceHistory `protobuf:"bytes,1,rep,name=price_history,json=priceHistory,proto3" json:"price_history,omitempty"`
}

func (x *PriceHistoryData) Reset() {
	*x = PriceHistoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceHistoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceHistoryData) ProtoMessage() {}

func (x *PriceHistoryData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceHistoryData.ProtoReflect.Descriptor instead.
func (*PriceHistoryData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{16}
}

func (x *PriceHistoryData) GetPriceHistory() []*PriceHistory {
	if x != nil {
		return x.PriceHistory
	}
	return nil
}

type AvailableTickerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickers []string `protobuf:"bytes,1,rep,name=tickers,proto3" json:"tickers,omitempty"`
}

func (x *AvailableTickerResponse) Reset() {
	*x = AvailableTickerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableTickerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableTickerResponse) ProtoMessage() {}

func (x *AvailableTickerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableTickerResponse.ProtoReflect.Descriptor instead.
func (*AvailableTickerResponse) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{17}
}

func (x *AvailableTickerResponse) GetTickers() []string {
	if x != nil {
		return x.Tickers
	}
	return nil
}

type OrderFilledData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId          string    `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Asset        string    `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	ClientTag    string    `protobuf:"bytes,3,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
	CounterAsset string    `protobuf:"bytes,4,opt,name=counter_asset,json=counterAsset,proto3" json:"counter_asset,omitempty"`
	CreatedAt    string    `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FilledAt     string    `protobuf:"bytes,6,opt,name=filled_at,json=filledAt,proto3" json:"filled_at,omitempty"`
	LimitPrice   string    `protobuf:"bytes,7,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	OrderType    string    `protobuf:"bytes,8,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	Price        float64   `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	Quantity     float64   `protobuf:"fixed64,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side         string    `protobuf:"bytes,11,opt,name=side,proto3" json:"side,omitempty"`
	Source       string    `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	Status       string    `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Text         string    `protobuf:"bytes,14,opt,name=text,proto3" json:"text,omitempty"`
	User         *UserData `protobuf:"bytes,15,opt,name=user,proto3" json:"user,omitempty"`
	UserEmail    string    `protobuf:"bytes,16,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	UserName     string    `protobuf:"bytes,17,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *OrderFilledData) Reset() {
	*x = OrderFilledData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFilledData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFilledData) ProtoMessage() {}

func (x *OrderFilledData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFilledData.ProtoReflect.Descriptor instead.
func (*OrderFilledData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{18}
}

func (x *OrderFilledData) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *OrderFilledData) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *OrderFilledData) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

func (x *OrderFilledData) GetCounterAsset() string {
	if x != nil {
		return x.CounterAsset
	}
	return ""
}

func (x *OrderFilledData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderFilledData) GetFilledAt() string {
	if x != nil {
		return x.FilledAt
	}
	return ""
}

func (x *OrderFilledData) GetLimitPrice() string {
	if x != nil {
		return x.LimitPrice
	}
	return ""
}

func (x *OrderFilledData) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *OrderFilledData) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderFilledData) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderFilledData) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *OrderFilledData) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OrderFilledData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderFilledData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OrderFilledData) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *OrderFilledData) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *OrderFilledData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type OrderFilled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *OrderFilledData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Topic  string           `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string           `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *OrderFilled) Reset() {
	*x = OrderFilled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFilled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFilled) ProtoMessage() {}

func (x *OrderFilled) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFilled.ProtoReflect.Descriptor instead.
func (*OrderFilled) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{19}
}

func (x *OrderFilled) GetData() *OrderFilledData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OrderFilled) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *OrderFilled) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type OrderOpenedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId          string    `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Asset        string    `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	ClientTag    string    `protobuf:"bytes,3,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
	CounterAsset string    `protobuf:"bytes,4,opt,name=counter_asset,json=counterAsset,proto3" json:"counter_asset,omitempty"`
	CreatedAt    string    `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FilledAt     string    `protobuf:"bytes,6,opt,name=filled_at,json=filledAt,proto3" json:"filled_at,omitempty"`
	LimitPrice   string    `protobuf:"bytes,7,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	OrderType    string    `protobuf:"bytes,8,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	Price        float64   `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	Quantity     float64   `protobuf:"fixed64,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side         string    `protobuf:"bytes,11,opt,name=side,proto3" json:"side,omitempty"`
	Source       string    `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	Status       string    `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Text         string    `protobuf:"bytes,14,opt,name=text,proto3" json:"text,omitempty"`
	User         *UserData `protobuf:"bytes,15,opt,name=user,proto3" json:"user,omitempty"`
	UserEmail    string    `protobuf:"bytes,16,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	UserName     string    `protobuf:"bytes,17,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *OrderOpenedData) Reset() {
	*x = OrderOpenedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOpenedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOpenedData) ProtoMessage() {}

func (x *OrderOpenedData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOpenedData.ProtoReflect.Descriptor instead.
func (*OrderOpenedData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{20}
}

func (x *OrderOpenedData) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *OrderOpenedData) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *OrderOpenedData) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

func (x *OrderOpenedData) GetCounterAsset() string {
	if x != nil {
		return x.CounterAsset
	}
	return ""
}

func (x *OrderOpenedData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderOpenedData) GetFilledAt() string {
	if x != nil {
		return x.FilledAt
	}
	return ""
}

func (x *OrderOpenedData) GetLimitPrice() string {
	if x != nil {
		return x.LimitPrice
	}
	return ""
}

func (x *OrderOpenedData) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *OrderOpenedData) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderOpenedData) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderOpenedData) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *OrderOpenedData) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OrderOpenedData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderOpenedData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OrderOpenedData) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *OrderOpenedData) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *OrderOpenedData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type OrderOpened struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *OrderOpenedData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Topic  string           `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string           `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *OrderOpened) Reset() {
	*x = OrderOpened{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOpened) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOpened) ProtoMessage() {}

func (x *OrderOpened) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOpened.ProtoReflect.Descriptor instead.
func (*OrderOpened) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{21}
}

func (x *OrderOpened) GetData() *OrderOpenedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OrderOpened) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *OrderOpened) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type OrderCancelledData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId          string    `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Asset        string    `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	CancelledAt  string    `protobuf:"bytes,3,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	ClientTag    string    `protobuf:"bytes,4,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
	CounterAsset string    `protobuf:"bytes,5,opt,name=counter_asset,json=counterAsset,proto3" json:"counter_asset,omitempty"`
	CreatedAt    string    `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FilledAt     string    `protobuf:"bytes,7,opt,name=filled_at,json=filledAt,proto3" json:"filled_at,omitempty"`
	LimitPrice   string    `protobuf:"bytes,8,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	OrderType    string    `protobuf:"bytes,9,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	Price        float64   `protobuf:"fixed64,10,opt,name=price,proto3" json:"price,omitempty"`
	Quantity     float64   `protobuf:"fixed64,11,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side         string    `protobuf:"bytes,12,opt,name=side,proto3" json:"side,omitempty"`
	Source       string    `protobuf:"bytes,13,opt,name=source,proto3" json:"source,omitempty"`
	Status       string    `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	Text         string    `protobuf:"bytes,15,opt,name=text,proto3" json:"text,omitempty"`
	User         *UserData `protobuf:"bytes,16,opt,name=user,proto3" json:"user,omitempty"`
	UserEmail    string    `protobuf:"bytes,17,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	UserName     string    `protobuf:"bytes,18,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *OrderCancelledData) Reset() {
	*x = OrderCancelledData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancelledData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancelledData) ProtoMessage() {}

func (x *OrderCancelledData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancelledData.ProtoReflect.Descriptor instead.
func (*OrderCancelledData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{22}
}

func (x *OrderCancelledData) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *OrderCancelledData) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *OrderCancelledData) GetCancelledAt() string {
	if x != nil {
		return x.CancelledAt
	}
	return ""
}

func (x *OrderCancelledData) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

func (x *OrderCancelledData) GetCounterAsset() string {
	if x != nil {
		return x.CounterAsset
	}
	return ""
}

func (x *OrderCancelledData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderCancelledData) GetFilledAt() string {
	if x != nil {
		return x.FilledAt
	}
	return ""
}

func (x *OrderCancelledData) GetLimitPrice() string {
	if x != nil {
		return x.LimitPrice
	}
	return ""
}

func (x *OrderCancelledData) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *OrderCancelledData) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderCancelledData) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderCancelledData) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *OrderCancelledData) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OrderCancelledData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderCancelledData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OrderCancelledData) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *OrderCancelledData) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *OrderCancelledData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type OrderCancelled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *OrderCancelledData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Topic  string              `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string              `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *OrderCancelled) Reset() {
	*x = OrderCancelled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancelled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancelled) ProtoMessage() {}

func (x *OrderCancelled) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancelled.ProtoReflect.Descriptor instead.
func (*OrderCancelled) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{23}
}

func (x *OrderCancelled) GetData() *OrderCancelledData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OrderCancelled) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *OrderCancelled) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SettlementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset            string  `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	AssetId          uint32  `protobuf:"varint,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	BatchId          uint32  `protobuf:"varint,3,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	CreatedAt        string  `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Id               uint32  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	NetQuantity      float64 `protobuf:"fixed64,6,opt,name=net_quantity,json=netQuantity,proto3" json:"net_quantity,omitempty"`
	Reference        string  `protobuf:"bytes,7,opt,name=reference,proto3" json:"reference,omitempty"`
	SettlementSource string  `protobuf:"bytes,8,opt,name=settlement_source,json=settlementSource,proto3" json:"settlement_source,omitempty"`
	Type             string  `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	UpdatedAt        string  `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy        uint32  `protobuf:"varint,11,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	UserId           uint32  `protobuf:"varint,12,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SettlementInfo) Reset() {
	*x = SettlementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementInfo) ProtoMessage() {}

func (x *SettlementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementInfo.ProtoReflect.Descriptor instead.
func (*SettlementInfo) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{24}
}

func (x *SettlementInfo) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *SettlementInfo) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *SettlementInfo) GetBatchId() uint32 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *SettlementInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SettlementInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SettlementInfo) GetNetQuantity() float64 {
	if x != nil {
		return x.NetQuantity
	}
	return 0
}

func (x *SettlementInfo) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *SettlementInfo) GetSettlementSource() string {
	if x != nil {
		return x.SettlementSource
	}
	return ""
}

func (x *SettlementInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SettlementInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SettlementInfo) GetUpdatedBy() uint32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *SettlementInfo) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type BatchDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetQuantity string `protobuf:"bytes,1,opt,name=net_quantity,json=netQuantity,proto3" json:"net_quantity,omitempty"`
	Symbol      string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *BatchDetail) Reset() {
	*x = BatchDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDetail) ProtoMessage() {}

func (x *BatchDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDetail.ProtoReflect.Descriptor instead.
func (*BatchDetail) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{25}
}

func (x *BatchDetail) GetNetQuantity() string {
	if x != nil {
		return x.NetQuantity
	}
	return ""
}

func (x *BatchDetail) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SettlementAddedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchDetails []*BatchDetail  `protobuf:"bytes,1,rep,name=batch_details,json=batchDetails,proto3" json:"batch_details,omitempty"`
	BatchUuid    string          `protobuf:"bytes,2,opt,name=batch_uuid,json=batchUuid,proto3" json:"batch_uuid,omitempty"`
	Info         *SettlementInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Text         string          `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	User         *UserData       `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	UserEmail    string          `protobuf:"bytes,6,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
}

func (x *SettlementAddedData) Reset() {
	*x = SettlementAddedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementAddedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementAddedData) ProtoMessage() {}

func (x *SettlementAddedData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementAddedData.ProtoReflect.Descriptor instead.
func (*SettlementAddedData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{26}
}

func (x *SettlementAddedData) GetBatchDetails() []*BatchDetail {
	if x != nil {
		return x.BatchDetails
	}
	return nil
}

func (x *SettlementAddedData) GetBatchUuid() string {
	if x != nil {
		return x.BatchUuid
	}
	return ""
}

func (x *SettlementAddedData) GetInfo() *SettlementInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SettlementAddedData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SettlementAddedData) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SettlementAddedData) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type SettlementAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *SettlementAddedData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Topic  string               `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string               `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SettlementAdded) Reset() {
	*x = SettlementAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementAdded) ProtoMessage() {}

func (x *SettlementAdded) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementAdded.ProtoReflect.Descriptor instead.
func (*SettlementAdded) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{27}
}

func (x *SettlementAdded) GetData() *SettlementAddedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SettlementAdded) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SettlementAdded) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyName  string `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	FirstName    string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	GroupAccount string `protobuf:"bytes,4,opt,name=group_account,json=groupAccount,proto3" json:"group_account,omitempty"`
	LastName     string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Uuid         string `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{28}
}

func (x *UserData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *UserData) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserData) GetGroupAccount() string {
	if x != nil {
		return x.GroupAccount
	}
	return ""
}

func (x *UserData) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type LoginData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip        string    `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Text      string    `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	User      *UserData `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	UserEmail string    `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
}

func (x *LoginData) Reset() {
	*x = LoginData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginData) ProtoMessage() {}

func (x *LoginData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginData.ProtoReflect.Descriptor instead.
func (*LoginData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{29}
}

func (x *LoginData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LoginData) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginData) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *LoginData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Topic  string     `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string     `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Login) Reset() {
	*x = Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{30}
}

func (x *Login) GetData() *LoginData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Login) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Login) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type BatchSettledData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchDetails []*BatchDetail  `protobuf:"bytes,1,rep,name=batch_details,json=batchDetails,proto3" json:"batch_details,omitempty"`
	BatchUuid    string          `protobuf:"bytes,2,opt,name=batch_uuid,json=batchUuid,proto3" json:"batch_uuid,omitempty"`
	Info         *SettlementInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Text         string          `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	User         *UserData       `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	UserEmail    string          `protobuf:"bytes,6,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
}

func (x *BatchSettledData) Reset() {
	*x = BatchSettledData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSettledData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSettledData) ProtoMessage() {}

func (x *BatchSettledData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSettledData.ProtoReflect.Descriptor instead.
func (*BatchSettledData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{31}
}

func (x *BatchSettledData) GetBatchDetails() []*BatchDetail {
	if x != nil {
		return x.BatchDetails
	}
	return nil
}

func (x *BatchSettledData) GetBatchUuid() string {
	if x != nil {
		return x.BatchUuid
	}
	return ""
}

func (x *BatchSettledData) GetInfo() *SettlementInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *BatchSettledData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BatchSettledData) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BatchSettledData) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type BatchSettled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *BatchSettledData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Topic  string            `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string            `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *BatchSettled) Reset() {
	*x = BatchSettled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSettled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSettled) ProtoMessage() {}

func (x *BatchSettled) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSettled.ProtoReflect.Descriptor instead.
func (*BatchSettled) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{32}
}

func (x *BatchSettled) GetData() *BatchSettledData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BatchSettled) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *BatchSettled) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type BatchCreatedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchDetails []*BatchDetail `protobuf:"bytes,1,rep,name=batch_details,json=batchDetails,proto3" json:"batch_details,omitempty"`
	BatchUuid    string         `protobuf:"bytes,2,opt,name=batch_uuid,json=batchUuid,proto3" json:"batch_uuid,omitempty"`
	Text         string         `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	User         *UserData      `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	UserEmail    string         `protobuf:"bytes,5,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
}

func (x *BatchCreatedData) Reset() {
	*x = BatchCreatedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreatedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreatedData) ProtoMessage() {}

func (x *BatchCreatedData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreatedData.ProtoReflect.Descriptor instead.
func (*BatchCreatedData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{33}
}

func (x *BatchCreatedData) GetBatchDetails() []*BatchDetail {
	if x != nil {
		return x.BatchDetails
	}
	return nil
}

func (x *BatchCreatedData) GetBatchUuid() string {
	if x != nil {
		return x.BatchUuid
	}
	return ""
}

func (x *BatchCreatedData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BatchCreatedData) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BatchCreatedData) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type BatchCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *BatchCreatedData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Topic  string            `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string            `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *BatchCreated) Reset() {
	*x = BatchCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreated) ProtoMessage() {}

func (x *BatchCreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreated.ProtoReflect.Descriptor instead.
func (*BatchCreated) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{34}
}

func (x *BatchCreated) GetData() *BatchCreatedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BatchCreated) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *BatchCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LimitChangedDataChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewMax           string `protobuf:"bytes,1,opt,name=new_max,json=newMax,proto3" json:"new_max,omitempty"`
	NewMin           string `protobuf:"bytes,2,opt,name=new_min,json=newMin,proto3" json:"new_min,omitempty"`
	NewUnsettledBuy  string `protobuf:"bytes,3,opt,name=new_unsettled_buy,json=newUnsettledBuy,proto3" json:"new_unsettled_buy,omitempty"`
	NewUnsettledSell string `protobuf:"bytes,4,opt,name=new_unsettled_sell,json=newUnsettledSell,proto3" json:"new_unsettled_sell,omitempty"`
	OldMax           string `protobuf:"bytes,5,opt,name=old_max,json=oldMax,proto3" json:"old_max,omitempty"`
	OldMin           string `protobuf:"bytes,6,opt,name=old_min,json=oldMin,proto3" json:"old_min,omitempty"`
	OldUnsettledBuy  string `protobuf:"bytes,7,opt,name=old_unsettled_buy,json=oldUnsettledBuy,proto3" json:"old_unsettled_buy,omitempty"`
	OldUnsettledSell string `protobuf:"bytes,8,opt,name=old_unsettled_sell,json=oldUnsettledSell,proto3" json:"old_unsettled_sell,omitempty"`
	Symbol           string `protobuf:"bytes,9,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *LimitChangedDataChange) Reset() {
	*x = LimitChangedDataChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitChangedDataChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitChangedDataChange) ProtoMessage() {}

func (x *LimitChangedDataChange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitChangedDataChange.ProtoReflect.Descriptor instead.
func (*LimitChangedDataChange) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{35}
}

func (x *LimitChangedDataChange) GetNewMax() string {
	if x != nil {
		return x.NewMax
	}
	return ""
}

func (x *LimitChangedDataChange) GetNewMin() string {
	if x != nil {
		return x.NewMin
	}
	return ""
}

func (x *LimitChangedDataChange) GetNewUnsettledBuy() string {
	if x != nil {
		return x.NewUnsettledBuy
	}
	return ""
}

func (x *LimitChangedDataChange) GetNewUnsettledSell() string {
	if x != nil {
		return x.NewUnsettledSell
	}
	return ""
}

func (x *LimitChangedDataChange) GetOldMax() string {
	if x != nil {
		return x.OldMax
	}
	return ""
}

func (x *LimitChangedDataChange) GetOldMin() string {
	if x != nil {
		return x.OldMin
	}
	return ""
}

func (x *LimitChangedDataChange) GetOldUnsettledBuy() string {
	if x != nil {
		return x.OldUnsettledBuy
	}
	return ""
}

func (x *LimitChangedDataChange) GetOldUnsettledSell() string {
	if x != nil {
		return x.OldUnsettledSell
	}
	return ""
}

func (x *LimitChangedDataChange) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type LimitChangedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Changes   []*LimitChangedDataChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	Text      string                    `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	User      *UserData                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	UserEmail string                    `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
}

func (x *LimitChangedData) Reset() {
	*x = LimitChangedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitChangedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitChangedData) ProtoMessage() {}

func (x *LimitChangedData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitChangedData.ProtoReflect.Descriptor instead.
func (*LimitChangedData) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{36}
}

func (x *LimitChangedData) GetChanges() []*LimitChangedDataChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *LimitChangedData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LimitChangedData) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LimitChangedData) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type LimitChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *LimitChangedData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Topic  string            `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string            `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *LimitChanged) Reset() {
	*x = LimitChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitChanged) ProtoMessage() {}

func (x *LimitChanged) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitChanged.ProtoReflect.Descriptor instead.
func (*LimitChanged) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{37}
}

func (x *LimitChanged) GetData() *LimitChangedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LimitChanged) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *LimitChanged) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic  string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*Notification_OrderFilled
	//	*Notification_OrderOpened
	//	*Notification_OrderCancelled
	//	*Notification_SettlementAdded
	//	*Notification_BatchSettled
	//	*Notification_Login
	//	*Notification_BatchCreated
	//	*Notification_LimitChanged
	Payload isNotification_Payload `protobuf_oneof:"payload"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{38}
}

func (x *Notification) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Notification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (m *Notification) GetPayload() isNotification_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Notification) GetOrderFilled() *OrderFilled {
	if x, ok := x.GetPayload().(*Notification_OrderFilled); ok {
		return x.OrderFilled
	}
	return nil
}

func (x *Notification) GetOrderOpened() *OrderOpened {
	if x, ok := x.GetPayload().(*Notification_OrderOpened); ok {
		return x.OrderOpened
	}
	return nil
}

func (x *Notification) GetOrderCancelled() *OrderCancelled {
	if x, ok := x.GetPayload().(*Notification_OrderCancelled); ok {
		return x.OrderCancelled
	}
	return nil
}

func (x *Notification) GetSettlementAdded() *SettlementAdded {
	if x, ok := x.GetPayload().(*Notification_SettlementAdded); ok {
		return x.SettlementAdded
	}
	return nil
}

func (x *Notification) GetBatchSettled() *BatchSettled {
	if x, ok := x.GetPayload().(*Notification_BatchSettled); ok {
		return x.BatchSettled
	}
	return nil
}

func (x *Notification) GetLogin() *Login {
	if x, ok := x.GetPayload().(*Notification_Login); ok {
		return x.Login
	}
	return nil
}

func (x *Notification) GetBatchCreated() *BatchCreated {
	if x, ok := x.GetPayload().(*Notification_BatchCreated); ok {
		return x.BatchCreated
	}
	return nil
}

func (x *Notification) GetLimitChanged() *LimitChanged {
	if x, ok := x.GetPayload().(*Notification_LimitChanged); ok {
		return x.LimitChanged
	}
	return nil
}

type isNotification_Payload interface {
	isNotification_Payload()
}

type Notification_OrderFilled struct {
	OrderFilled *OrderFilled `protobuf:"bytes,3,opt,name=order_filled,json=orderFilled,proto3,oneof"`
}

type Notification_OrderOpened struct {
	OrderOpened *OrderOpened `protobuf:"bytes,4,opt,name=order_opened,json=orderOpened,proto3,oneof"`
}

type Notification_OrderCancelled struct {
	OrderCancelled *OrderCancelled `protobuf:"bytes,5,opt,name=order_cancelled,json=orderCancelled,proto3,oneof"`
}

type Notification_SettlementAdded struct {
	SettlementAdded *SettlementAdded `protobuf:"bytes,6,opt,name=settlement_added,json=settlementAdded,proto3,oneof"`
}

type Notification_BatchSettled struct {
	BatchSettled *BatchSettled `protobuf:"bytes,7,opt,name=batch_settled,json=batchSettled,proto3,oneof"`
}

type Notification_Login struct {
	Login *Login `protobuf:"bytes,8,opt,name=login,proto3,oneof"`
}

type Notification_BatchCreated struct {
	BatchCreated *BatchCreated `protobuf:"bytes,9,opt,name=batch_created,json=batchCreated,proto3,oneof"`
}

type Notification_LimitChanged struct {
	LimitChanged *LimitChanged `protobuf:"bytes,10,opt,name=limit_changed,json=limitChanged,proto3,oneof"`
}

func (*Notification_OrderFilled) isNotification_Payload() {}

func (*Notification_OrderOpened) isNotification_Payload() {}

func (*Notification_OrderCancelled) isNotification_Payload() {}

func (*Notification_SettlementAdded) isNotification_Payload() {}

func (*Notification_BatchSettled) isNotification_Payload() {}

func (*Notification_Login) isNotification_Payload() {}

func (*Notification_BatchCreated) isNotification_Payload() {}

func (*Notification_LimitChanged) isNotification_Payload() {}

type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  Types  `protobuf:"varint,1,opt,name=type,proto3,enum=main.Types" json:"type,omitempty"`
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Topic string `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// Types that are assignable to Data:
	//
	//	*ClientMessage_LevelData
	//	*ClientMessage_PricesData
	//	*ClientMessage_InfoMessage
	//	*ClientMessage_ErrorMessage
	//	*ClientMessage_TradeStatusRequest
	//	*ClientMessage_CreateOrderRequest
	//	*ClientMessage_TradeStatusResponse
	//	*ClientMessage_LimitResponse
	//	*ClientMessage_Message
	//	*ClientMessage_PriceHistoryRequest
	//	*ClientMessage_PriceHistoryData
	//	*ClientMessage_AvailableTickerResponse
	//	*ClientMessage_Notification
	Data isClientMessage_Data `protobuf_oneof:"data"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_client_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_proto_client_proto_rawDescGZIP(), []int{39}
}

func (x *ClientMessage) GetType() Types {
	if x != nil {
		return x.Type
	}
	return Types_subscribe
}

func (x *ClientMessage) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *ClientMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (m *ClientMessage) GetData() isClientMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ClientMessage) GetLevelData() *LevelData {
	if x, ok := x.GetData().(*ClientMessage_LevelData); ok {
		return x.LevelData
	}
	return nil
}

func (x *ClientMessage) GetPricesData() *PricesData {
	if x, ok := x.GetData().(*ClientMessage_PricesData); ok {
		return x.PricesData
	}
	return nil
}

func (x *ClientMessage) GetInfoMessage() *InfoMessage {
	if x, ok := x.GetData().(*ClientMessage_InfoMessage); ok {
		return x.InfoMessage
	}
	return nil
}

func (x *ClientMessage) GetErrorMessage() *ErrorMessage {
	if x, ok := x.GetData().(*ClientMessage_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return nil
}

func (x *ClientMessage) GetTradeStatusRequest() *TradeStatusRequest {
	if x, ok := x.GetData().(*ClientMessage_TradeStatusRequest); ok {
		return x.TradeStatusRequest
	}
	return nil
}

func (x *ClientMessage) GetCreateOrderRequest() *CreateOrderMessage {
	if x, ok := x.GetData().(*ClientMessage_CreateOrderRequest); ok {
		return x.CreateOrderRequest
	}
	return nil
}

func (x *ClientMessage) GetTradeStatusResponse() *TradeStatusResponse {
	if x, ok := x.GetData().(*ClientMessage_TradeStatusResponse); ok {
		return x.TradeStatusResponse
	}
	return nil
}

func (x *ClientMessage) GetLimitResponse() *LimitsResponse {
	if x, ok := x.GetData().(*ClientMessage_LimitResponse); ok {
		return x.LimitResponse
	}
	return nil
}

func (x *ClientMessage) GetMessage() *StatusMessage {
	if x, ok := x.GetData().(*ClientMessage_Message); ok {
		return x.Message
	}
	return nil
}

func (x *ClientMessage) GetPriceHistoryRequest() *PriceHistoryRequest {
	if x, ok := x.GetData().(*ClientMessage_PriceHistoryRequest); ok {
		return x.PriceHistoryRequest
	}
	return nil
}

func (x *ClientMessage) GetPriceHistoryData() *PriceHistoryData {
	if x, ok := x.GetData().(*ClientMessage_PriceHistoryData); ok {
		return x.PriceHistoryData
	}
	return nil
}

func (x *ClientMessage) GetAvailableTickerResponse() *AvailableTickerResponse {
	if x, ok := x.GetData().(*ClientMessage_AvailableTickerResponse); ok {
		return x.AvailableTickerResponse
	}
	return nil
}

func (x *ClientMessage) GetNotification() *Notification {
	if x, ok := x.GetData().(*ClientMessage_Notification); ok {
		return x.Notification
	}
	return nil
}

type isClientMessage_Data interface {
	isClientMessage_Data()
}

type ClientMessage_LevelData struct {
	LevelData *LevelData `protobuf:"bytes,4,opt,name=level_data,json=levelData,proto3,oneof"`
}

type ClientMessage_PricesData struct {
	PricesData *PricesData `protobuf:"bytes,5,opt,name=prices_data,json=pricesData,proto3,oneof"`
}

type ClientMessage_InfoMessage struct {
	InfoMessage *InfoMessage `protobuf:"bytes,6,opt,name=info_message,json=infoMessage,proto3,oneof"`
}

type ClientMessage_ErrorMessage struct {
	ErrorMessage *ErrorMessage `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

type ClientMessage_TradeStatusRequest struct {
	TradeStatusRequest *TradeStatusRequest `protobuf:"bytes,8,opt,name=trade_status_request,json=tradeStatusRequest,proto3,oneof"`
}

type ClientMessage_CreateOrderRequest struct {
	CreateOrderRequest *CreateOrderMessage `protobuf:"bytes,9,opt,name=create_order_request,json=createOrderRequest,proto3,oneof"`
}

type ClientMessage_TradeStatusResponse struct {
	TradeStatusResponse *TradeStatusResponse `protobuf:"bytes,10,opt,name=trade_status_response,json=tradeStatusResponse,proto3,oneof"`
}

type ClientMessage_LimitResponse struct {
	LimitResponse *LimitsResponse `protobuf:"bytes,11,opt,name=limit_response,json=limitResponse,proto3,oneof"`
}

type ClientMessage_Message struct {
	Message *StatusMessage `protobuf:"bytes,12,opt,name=message,proto3,oneof"`
}

type ClientMessage_PriceHistoryRequest struct {
	PriceHistoryRequest *PriceHistoryRequest `protobuf:"bytes,13,opt,name=price_history_request,json=priceHistoryRequest,proto3,oneof"`
}

type ClientMessage_PriceHistoryData struct {
	PriceHistoryData *PriceHistoryData `protobuf:"bytes,14,opt,name=price_history_data,json=priceHistoryData,proto3,oneof"`
}

type ClientMessage_AvailableTickerResponse struct {
	AvailableTickerResponse *AvailableTickerResponse `protobuf:"bytes,15,opt,name=available_ticker_response,json=availableTickerResponse,proto3,oneof"`
}

type ClientMessage_Notification struct {
	Notification *Notification `protobuf:"bytes,16,opt,name=notification,proto3,oneof"`
}

func (*ClientMessage_LevelData) isClientMessage_Data() {}

func (*ClientMessage_PricesData) isClientMessage_Data() {}

func (*ClientMessage_InfoMessage) isClientMessage_Data() {}

func (*ClientMessage_ErrorMessage) isClientMessage_Data() {}

func (*ClientMessage_TradeStatusRequest) isClientMessage_Data() {}

func (*ClientMessage_CreateOrderRequest) isClientMessage_Data() {}

func (*ClientMessage_TradeStatusResponse) isClientMessage_Data() {}

func (*ClientMessage_LimitResponse) isClientMessage_Data() {}

func (*ClientMessage_Message) isClientMessage_Data() {}

func (*ClientMessage_PriceHistoryRequest) isClientMessage_Data() {}

func (*ClientMessage_PriceHistoryData) isClientMessage_Data() {}

func (*ClientMessage_AvailableTickerResponse) isClientMessage_Data() {}

func (*ClientMessage_Notification) isClientMessage_Data() {}

var File_proto_client_proto protoreflect.FileDescriptor

var file_proto_client_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x27, 0x0a, 0x0b, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x66, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x62, 0x75,
	0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61,
	0x78, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa4, 0x02, 0x0a, 0x0a, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x62, 0x65, 0x73, 0x74, 0x42, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x65,
	0x73, 0x74, 0x5f, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x65,
	0x73, 0x74, 0x41, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x22, 0x84, 0x01, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x23, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x66, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x22,
	0xc1, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12,
	0x23, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04,
	0x73, 0x69, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x03, 0x0a, 0x05, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x22, 0x3a, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x6d, 0x61, 0x78, 0x42, 0x75, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x0e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x64,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x75, 0x73, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x29, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdf, 0x02, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x0f, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x22, 0x7c, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x69, 0x67,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x48, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x4c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4c, 0x6f, 0x77, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x4b, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x33, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x22, 0xe2, 0x03, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x0b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xe2, 0x03, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x0b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x88, 0x04, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a,
	0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe4, 0x02, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x6e, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xed, 0x01,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x55, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x6f, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb2,
	0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x5b, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x0d, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0x69, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a,
	0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x36, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x69, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc8, 0x02, 0x0a, 0x16, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4d, 0x61, 0x78, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x65, 0x77, 0x4d, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x75,
	0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64,
	0x42, 0x75, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x6e, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6e, 0x65, 0x77, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x6c,
	0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6c,
	0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64,
	0x4d, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x6e, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6f, 0x6c, 0x64, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x42, 0x75, 0x79, 0x12,
	0x2c, 0x0a, 0x12, 0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64,
	0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x6c, 0x64,
	0x55, 0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x69, 0x0a, 0x0c, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x93, 0x04, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x6e, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x0d, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x42,
	0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xcb, 0x07, 0x0a, 0x0d, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x30, 0x0a, 0x0a, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x36, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x66,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4c, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4f, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x4f, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5b, 0x0a, 0x19, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x5f, 0x0a, 0x05, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x0d, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6e, 0x67, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0x04, 0x12, 0x09,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x05, 0x2a, 0x50, 0x0a, 0x06, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x61, 0x6e, 0x79, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x10, 0x04, 0x2a, 0x1e, 0x0a, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x75, 0x79, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x10, 0x01, 0x2a, 0x22, 0x0a, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4b,
	0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_client_proto_rawDescOnce sync.Once
	file_proto_client_proto_rawDescData = file_proto_client_proto_rawDesc
)

func file_proto_client_proto_rawDescGZIP() []byte {
	file_proto_client_proto_rawDescOnce.Do(func() {
		file_proto_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_client_proto_rawDescData)
	})
	return file_proto_client_proto_rawDescData
}

var file_proto_client_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_client_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_proto_client_proto_goTypes = []interface{}{
	(Types)(0),                      // 0: main.Types
	(Events)(0),                     // 1: main.Events
	(OrderSide)(0),                  // 2: main.OrderSide
	(OrderType)(0),                  // 3: main.OrderType
	(*InfoMessage)(nil),             // 4: main.InfoMessage
	(*ErrorMessage)(nil),            // 5: main.ErrorMessage
	(*Level)(nil),                   // 6: main.Level
	(*PricesData)(nil),              // 7: main.PricesData
	(*LevelData)(nil),               // 8: main.LevelData
	(*TradeStatusRequest)(nil),      // 9: main.TradeStatusRequest
	(*CreateOrderMessage)(nil),      // 10: main.CreateOrderMessage
	(*User)(nil),                    // 11: main.User
	(*Trade)(nil),                   // 12: main.Trade
	(*TradeStatusResponse)(nil),     // 13: main.TradeStatusResponse
	(*Asset)(nil),                   // 14: main.Asset
	(*LimitsResponse)(nil),          // 15: main.LimitsResponse
	(*StatusMessage)(nil),           // 16: main.StatusMessage
	(*OrderUpdate)(nil),             // 17: main.OrderUpdate
	(*PriceHistory)(nil),            // 18: main.PriceHistory
	(*PriceHistoryRequest)(nil),     // 19: main.PriceHistoryRequest
	(*PriceHistoryData)(nil),        // 20: main.PriceHistoryData
	(*AvailableTickerResponse)(nil), // 21: main.AvailableTickerResponse
	(*OrderFilledData)(nil),         // 22: main.OrderFilledData
	(*OrderFilled)(nil),             // 23: main.OrderFilled
	(*OrderOpenedData)(nil),         // 24: main.OrderOpenedData
	(*OrderOpened)(nil),             // 25: main.OrderOpened
	(*OrderCancelledData)(nil),      // 26: main.OrderCancelledData
	(*OrderCancelled)(nil),          // 27: main.OrderCancelled
	(*SettlementInfo)(nil),          // 28: main.SettlementInfo
	(*BatchDetail)(nil),             // 29: main.BatchDetail
	(*SettlementAddedData)(nil),     // 30: main.SettlementAddedData
	(*SettlementAdded)(nil),         // 31: main.SettlementAdded
	(*UserData)(nil),                // 32: main.UserData
	(*LoginData)(nil),               // 33: main.LoginData
	(*Login)(nil),                   // 34: main.Login
	(*BatchSettledData)(nil),        // 35: main.BatchSettledData
	(*BatchSettled)(nil),            // 36: main.BatchSettled
	(*BatchCreatedData)(nil),        // 37: main.BatchCreatedData
	(*BatchCreated)(nil),            // 38: main.BatchCreated
	(*LimitChangedDataChange)(nil),  // 39: main.LimitChangedDataChange
	(*LimitChangedData)(nil),        // 40: main.LimitChangedData
	(*LimitChanged)(nil),            // 41: main.LimitChanged
	(*Notification)(nil),            // 42: main.Notification
	(*ClientMessage)(nil),           // 43: main.ClientMessage
}
var file_proto_client_proto_depIdxs = []int32{
	6,  // 0: main.LevelData.levels:type_name -> main.Level
	2,  // 1: main.CreateOrderMessage.side:type_name -> main.OrderSide
	3,  // 2: main.CreateOrderMessage.order_type:type_name -> main.OrderType
	2,  // 3: main.Trade.side:type_name -> main.OrderSide
	3,  // 4: main.Trade.order_type:type_name -> main.OrderType
	11, // 5: main.Trade.user:type_name -> main.User
	12, // 6: main.TradeStatusResponse.trades:type_name -> main.Trade
	14, // 7: main.LimitsResponse.assets:type_name -> main.Asset
	2,  // 8: main.OrderUpdate.side:type_name -> main.OrderSide
	11, // 9: main.OrderUpdate.user:type_name -> main.User
	18, // 10: main.PriceHistoryData.price_history:type_name -> main.PriceHistory
	32, // 11: main.OrderFilledData.user:type_name -> main.UserData
	22, // 12: main.OrderFilled.data:type_name -> main.OrderFilledData
	32, // 13: main.OrderOpenedData.user:type_name -> main.UserData
	24, // 14: main.OrderOpened.data:type_name -> main.OrderOpenedData
	32, // 15: main.OrderCancelledData.user:type_name -> main.UserData
	26, // 16: main.OrderCancelled.data:type_name -> main.OrderCancelledData
	29, // 17: main.SettlementAddedData.batch_details:type_name -> main.BatchDetail
	28, // 18: main.SettlementAddedData.info:type_name -> main.SettlementInfo
	32, // 19: main.SettlementAddedData.user:type_name -> main.UserData
	30, // 20: main.SettlementAdded.data:type_name -> main.SettlementAddedData
	32, // 21: main.LoginData.user:type_name -> main.UserData
	33, // 22: main.Login.data:type_name -> main.LoginData
	29, // 23: main.BatchSettledData.batch_details:type_name -> main.BatchDetail
	28, // 24: main.BatchSettledData.info:type_name -> main.SettlementInfo
	32, // 25: main.BatchSettledData.user:type_name -> main.UserData
	35, // 26: main.BatchSettled.data:type_name -> main.BatchSettledData
	29, // 27: main.BatchCreatedData.batch_details:type_name -> main.BatchDetail
	32, // 28: main.BatchCreatedData.user:type_name -> main.UserData
	37, // 29: main.BatchCreated.data:type_name -> main.BatchCreatedData
	39, // 30: main.LimitChangedData.changes:type_name -> main.LimitChangedDataChange
	32, // 31: main.LimitChangedData.user:type_name -> main.UserData
	40, // 32: main.LimitChanged.data:type_name -> main.LimitChangedData
	23, // 33: main.Notification.order_filled:type_name -> main.OrderFilled
	25, // 34: main.Notification.order_opened:type_name -> main.OrderOpened
	27, // 35: main.Notification.order_cancelled:type_name -> main.OrderCancelled
	31, // 36: main.Notification.settlement_added:type_name -> main.SettlementAdded
	36, // 37: main.Notification.batch_settled:type_name -> main.BatchSettled
	34, // 38: main.Notification.login:type_name -> main.Login
	38, // 39: main.Notification.batch_created:type_name -> main.BatchCreated
	41, // 40: main.Notification.limit_changed:type_name -> main.LimitChanged
	0,  // 41: main.ClientMessage.type:type_name -> main.Types
	8,  // 42: main.ClientMessage.level_data:type_name -> main.LevelData
	7,  // 43: main.ClientMessage.prices_data:type_name -> main.PricesData
	4,  // 44: main.ClientMessage.info_message:type_name -> main.InfoMessage
	5,  // 45: main.ClientMessage.error_message:type_name -> main.ErrorMessage
	9,  // 46: main.ClientMessage.trade_status_request:type_name -> main.TradeStatusRequest
	10, // 47: main.ClientMessage.create_order_request:type_name -> main.CreateOrderMessage
	13, // 48: main.ClientMessage.trade_status_response:type_name -> main.TradeStatusResponse
	15, // 49: main.ClientMessage.limit_response:type_name -> main.LimitsResponse
	16, // 50: main.ClientMessage.message:type_name -> main.StatusMessage
	19, // 51: main.ClientMessage.price_history_request:type_name -> main.PriceHistoryRequest
	20, // 52: main.ClientMessage.price_history_data:type_name -> main.PriceHistoryData
	21, // 53: main.ClientMessage.available_ticker_response:type_name -> main.AvailableTickerResponse
	42, // 54: main.ClientMessage.notification:type_name -> main.Notification
	55, // [55:55] is the sub-list for method output_type
	55, // [55:55] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_proto_client_proto_init() }
func file_proto_client_proto_init() {
	if File_proto_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Level); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceHistoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableTickerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFilledData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFilled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOpenedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOpened); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancelledData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancelled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementAddedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSettledData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSettled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreatedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitChangedDataChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitChangedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_client_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_client_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*Notification_OrderFilled)(nil),
		(*Notification_OrderOpened)(nil),
		(*Notification_OrderCancelled)(nil),
		(*Notification_SettlementAdded)(nil),
		(*Notification_BatchSettled)(nil),
		(*Notification_Login)(nil),
		(*Notification_BatchCreated)(nil),
		(*Notification_LimitChanged)(nil),
	}
	file_proto_client_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*ClientMessage_LevelData)(nil),
		(*ClientMessage_PricesData)(nil),
		(*ClientMessage_InfoMessage)(nil),
		(*ClientMessage_ErrorMessage)(nil),
		(*ClientMessage_TradeStatusRequest)(nil),
		(*ClientMessage_CreateOrderRequest)(nil),
		(*ClientMessage_TradeStatusResponse)(nil),
		(*ClientMessage_LimitResponse)(nil),
		(*ClientMessage_Message)(nil),
		(*ClientMessage_PriceHistoryRequest)(nil),
		(*ClientMessage_PriceHistoryData)(nil),
		(*ClientMessage_AvailableTickerResponse)(nil),
		(*ClientMessage_Notification)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_client_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_client_proto_goTypes,
		DependencyIndexes: file_proto_client_proto_depIdxs,
		EnumInfos:         file_proto_client_proto_enumTypes,
		MessageInfos:      file_proto_client_proto_msgTypes,
	}.Build()
	File_proto_client_proto = out.File
	file_proto_client_proto_rawDesc = nil
	file_proto_client_proto_goTypes = nil
	file_proto_client_proto_depIdxs = nil
}
